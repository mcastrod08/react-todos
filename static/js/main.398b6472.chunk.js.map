{"version":3,"sources":["modals/CreateTask.js","modals/EditTask.js","components/Task.js","components/TodoList.js","components/Footer.js","App.js","index.js"],"names":["CreateTask","props","useState","taskName","setTaskName","description","setDescription","Modal","isOpen","modal","toggle","ModalHeader","title","ModalBody","className","htmlFor","type","name","value","onChange","e","target","rows","ModalFooter","Button","color","onClick","taskObj","saveTask","EditTask","task","preventDefault","tempObj","updateTask","Task","setModal","index","deleteTask","obj","updateListArray","TodoList","texts","taskList","setTaskList","useEffect","arr","localStorage","getItem","JSON","parse","handleDelete","tempList","splice","setItem","stringify","window","location","reload","map","Name","Description","push","Footer","style","textAlign","text","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.398b6472.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CreateTask = (props) => {\r\n\r\n\r\n\r\n  const handleTaskName = (e) => setTaskName(e.target.value);\r\n  const handleDescription = (e) => setDescription(e.target.value);\r\n\r\n  const handleSave = () => {\r\n    let taskObj = {};\r\n    taskObj[\"Name\"] = taskName;\r\n    taskObj[\"Description\"] = description;\r\n\r\n    props.saveTask(taskObj);\r\n    setTaskName(\"\");\r\n    setDescription(\"\");\r\n  }\r\n\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\")\r\n  return (\r\n\r\n    <Modal isOpen={props.modal} toggle={props.toggle}>\r\n      <ModalHeader toggle={props.toggle}>{props.title}</ModalHeader>\r\n      <ModalBody>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Task Title:</label>\r\n            <input type=\"text\" name=\"titleTask\" value={taskName} onChange={handleTaskName} className=\"form-control\" />  \r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Task Description:</label>\r\n            <textarea name=\"description\" rows=\"5\" value={description} onChange={handleDescription} className=\"form-control\"></textarea>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\r\n        <Button color=\"secondary\" onClick={props.toggle}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateTask;","import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTask = (props) => {\r\n\r\n\r\n\r\n  const handleTaskName = (e) => setTaskName(e.target.value);\r\n  const handleDescription = (e) => setDescription(e.target.value);\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    let tempObj = {};\r\n    tempObj[\"Name\"] = taskName;\r\n    tempObj[\"Description\"] = description;\r\n    props.updateTask(tempObj)\r\n  }\r\n\r\n  const [taskName, setTaskName] = useState(props.task);\r\n  const [description, setDescription] = useState(props.description);\r\n  return (\r\n\r\n    <Modal isOpen={props.modal} toggle={props.toggle}>\r\n      <ModalHeader toggle={props.toggle}>{props.title}</ModalHeader>\r\n      <ModalBody>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Task Title:</label>\r\n            <input type=\"text\" name=\"titleTask\" value={taskName} onChange={handleTaskName} className=\"form-control\" />  \r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Task Description:</label>\r\n            <textarea name=\"description\" rows=\"5\" value={description} onChange={handleDescription} className=\"form-control\"></textarea>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={handleUpdate}>Edit</Button>{' '}\r\n        <Button color=\"secondary\" onClick={props.toggle}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditTask;","import React, { useState } from 'react';\r\nimport \"./Task.css\";\r\nimport EditTask from \"../modals/EditTask\";\r\nconst Task = (props) => {\r\n\r\n\r\n  const texts = {\r\n    title: \"Todo List\",\r\n    button: \"Create Task\",\r\n    modalTitle: \"Edit Task\"\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    props.deleteTask(props.index)\r\n  }\r\n\r\n  const updateTask = (obj) => {\r\n    props.updateListArray(obj, props.index)\r\n  }\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  return (\r\n    <div className=\"card mr-4 mt-4 ml-4\">\r\n\t\t  <div className=\"card-header\">Task {props.index}</div>\r\n\t\t  <div className=\"card-body\">\r\n\t\t    <h5 className=\"card-title\">{props.name}</h5>\r\n\t\t    <p className=\"card-text\">\r\n\t\t      {props.description}\r\n\t\t    </p>\r\n\t\t  </div>\r\n\t\t  <div className=\"card-footer text-muted\">\r\n\t\t  \t<i className=\"fas fa-edit edit\" onClick={() => setModal(true)}></i>\r\n\t\t  \t<i className=\"fas fa-trash delete\" onClick={handleDelete}></i>\r\n\t\t  </div>\r\n  \t\t<EditTask toggle={toggle} modal={modal} title={texts.modalTitle} task={props.name} description={props.description} updateTask={updateTask}/>\r\n\r\n\t\t</div>\r\n  )\r\n}\r\n\r\nexport default Task;","import React, { useEffect, useState } from \"react\";\r\nimport './TodoList.css';\r\nimport CreateTask from \"../modals/CreateTask\";\r\nimport Task from \"./Task\"\r\n\r\nconst TodoList = () => {\r\n\r\n  const texts = {\r\n    title: \"Todo List\",\r\n    button: \"Create Task\",\r\n    modalTitle: \"Create New Task\"\r\n  }\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let arr = localStorage.getItem(\"taskList\")\r\n\r\n    if (arr) {\r\n      let obj = JSON.parse(arr)\r\n      setTaskList(obj)\r\n    }\r\n  }, [])\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const handleSaveTask = (taskObj) => {\r\n    let tempList = taskList;\r\n    tempList.push(taskObj);\r\n\r\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\r\n\r\n    setTaskList(tempList);\r\n    setModal(false)\r\n\r\n  }\r\n\r\n  const handleDelete = (index) => {\r\n    let tempList = taskList;\r\n    tempList.splice(index, 1);\r\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n    setTaskList(tempList);\r\n    window.location.reload()\r\n  }\r\n\r\n  const updateListArray = (obj, index) => {\r\n    let tempList = taskList;\r\n    tempList[index] = obj;\r\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n    setTaskList(tempList);\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n\t\t\t<div className=\"header text-center\">\r\n\t\t\t\t<h3>{texts.title}</h3>\r\n\t\t\t\t<button onClick = {() => setModal(true)} >{texts.button}</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"task-container\">\r\n\t\t\t\t{taskList.map((obj, index) => \r\n\t\t\t\t\t<Task \r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tname={obj.Name} \r\n\t\t\t\t\t\tdescription={obj.Description} \r\n\t\t\t\t\t\tindex={index} \r\n\t\t\t\t\t\tdeleteTask={handleDelete}\r\n\t\t\t\t\t\tupdateListArray = {updateListArray}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<CreateTask toggle={toggle} modal={modal} title={texts.modalTitle} saveTask={handleSaveTask} />\r\n\t\t</div>\r\n  )\r\n\r\n}\r\nexport default TodoList;","import React from \"react\";\r\n\r\n\r\nfunction Footer(props) {\r\n  let footerStyle = {\r\n    textAlign: \"center\",\r\n  };\r\n  return (\r\n    <div className=\"footer\" style={footerStyle}>\r\n      {props.text}  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import './App.css';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList/>\n      <Footer  text=\"© Copyright 2020 María Castro. All rights reserved.\"/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}